1. Was ist eigentlich eine Liste?

Eine Liste ist eine Aneinander-kettung von Daten, die in Prolog eine feste Strunktur haben. Sie ist die Referenz auf das erste Listenelement der Liste. Bei einer Liste:
[1,2,3,4,5,6] währe die "1" das erste Listenelement und würde so aussehen: "[Wert|[Schwanz der Liste]]". 
Bei diesem Beispiel hält der "Wert" den Wert des aktuellen Listenelements also die "1" und "Schwanz der Liste" das nächste Listenelement, welches die gleiche Struktur besitzt wie das Aktuelle Listenelement, welches wir betrachten.
Das ende der Liste wird durch ein Leeres Listenelement realiesiert das folgenermaßen aussieht: "[]"
Das heißt wenn ich die Liste, die wir bertachten in der Oreginalen Schreibweise, wie sie Prolog intern verarbeitet aufschreibe, wird aus der Liste: "[1,2,3,4]" die Liste: "[1, [2, [3, [4, []]]]]"
Beide schreibweisen sind in Prolog Implementiert und können beide Genutzt werden, nur eignet sich die Schreibweise: "[1, []]" deutlich besser zur Rekursion und Fallunterscheidung.


Im folgenden Kapitel werde ich die Strategien, die ich mit zum Lösen der Aufgabe ausgedacht habe ihnen näher bringen:

is_a_list(List):
	In diesem Prädikat gehen wir Rekursiv durch die Liste, und in jedem Rekursionsschritt prüfen wir, ob es sich bei dem Aktuellen Element um ein ListenElement handelt. 

	1. ist das aktuelle Element ein ListenElement?
		ja: gehe zu schritt 2
		nein: breche ab und geb zurück, das es sich um keine Liste handelt.
	2. ist das aktuelle Element ein Leeres ListenElement?
		ja: beende und geb zurück, das es sich um eine Liste handelt.
		nein: gehe zu schritt 1 mit dem nächste ListenElement.

praefix(praefix-liste, liste):
	In diesem Prädikat suchen wir in der Liste, ob die ersten ListenElemente der "Liste" gleich der "Praefix-Liste" ist. Die "Praefix-Liste" ist hierbei selber eine Liste.
	
	1. Die Praefix liste darf nicht Leer sein
	2. Ist der Wert des Erste ListenElements der "Liste" gleich dem des ersten ListenElements der "Praefix-Liste"?
		ja: gehe zu schritt 2 mit dem nächsten Element der "Praefix-Liste" und der "Liste"
		nein: ist das Erste ListenElement Der "Praefix-Liste" ein Leeres ListenElement und das erste ListenElement der "Liste" kein Leeres ListenElement
				ja: beende und geb zurück, das es sich bei der "praefix-liste" um das praefix der Liste "Liste" handelt.
				nein: beende und geb zurück, das es sich bei der "praefix-liste" nicht um das praefix der Liste "Liste" handelt.

suffix(suffix-liste, liste):
	In diesem Prädikat suchen wir in der Liste, ob die letzten Elemente der Liste gleich der "Suffix-Liste" ist. Die "Suffix-Liste" ist hierbei selber eine Liste.
	
	1. Die "Suffix-Liste" liste darf nicht Leer sein
	2. Der Wert vom ersten ListenElement von "Liste" darf nicht gleich dem des ersten ListenEmenets der "Suffix-Liste" sein
	3. gehe zu schritt 4 mit den nächsten Element der "Liste"
	4. Ist der Wert des Erste ListenElements der "Liste" gleich dem des ersten ListenElements der "Suffix-Liste"?
		ja: gehe zu schritt 2 mit dem nächsten Element der "Suffix-Liste" und der "Liste"
		nein: ist das Erste ListenElement Der "Suffix-Liste" ein Leeres ListenElement und das erste ListenElement der "Liste" auch ein Leeres ListenElement
				ja: beende und geb zurück, das es sich bei der "Suffix-Liste" um das Suffix der Liste "Liste" handelt.
				
				
				nein: beende und geb zurück, das es sich bei der "Suffix-Liste" nicht um das praefix der Liste "Liste" handelt.
